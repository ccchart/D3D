      subroutine wqint ( agrnam , fd_nefis_waq,
     +                   laux   ,nsegmt ,segmnt ,nsegtb ,
     +                   segtab ,npntr  ,nposeg ,pntr   ,
     +                   nexdef ,exdef  ,nbran  ,branch ,
     +                   nbrnod ,nnode  ,brnode ,ngrid  ,
     +                   nqlat  ,qltpar ,waoft  ,afwfqs ,
     +                   cp     ,qaggr  ,qlaggr ,x      ,
     +                   tofrom ,segfun ,sexar  ,sexfl  ,
     +                   slen   ,svol   ,juer   ,ker
     +                 )

c=======================================================================
c            Rijkswaterstaat/RIZA and DELFT HYDRAULICS
c                One Dimensional Modelling System
c                           S O B E K
c-----------------------------------------------------------------------
c Subsystem:          Water Quality Interface Module
c
c Programmer:         S.L. van der Woude
c
c Module:             WQINT (Water Quality INTerface)
c
c Module description: Convert hydrodynamic results to a water quality
c                     model database. The input file required for DELWAQ
c                     will partly be generated by the User Interface and
c                     partly by the water quality interface program. The
c                     User Interface will insert filenames in the input
c                     file for those items to be generated by the water
c                     quality interface module. DELWAQ will read these
c                     files when the input file is processed.
c
c                     First the water quality interface file is opened
c                     by calling WQOFIL. After that for each time step a
c                     record is read by calling WQRFIL. First a length
c                     table will be calculated by calling WQSLEN.
c                     The time-independent routine WQFRTO is called to
c                     write the from and to lengths of each section.
c                     After this the time depending information will be
c                     written:
c
c                     -   Volumes;
c                     -   Exchange areas;
c                     -   Exchange flows;
c                     -   Waste Loads;
c                     -   Aux files.
c
c                     For this purpose the routine WQFILE is called.
c
c-----------------------------------------------------------------------
c Parameters:
c NR NAME              IO DESCRIPTION
c 24 afwfqs            P  -
c  2 agrnam            P  -
c 16 branch            P  -
c 19 brnode            P  -
c 25 cp                P  -
c  4 datfds            P  -
c  3 deffds            P  -
c 14 exdef             P  -
c  1 filnam            P  -
c 35 juer              P  -
c 36 ker               P  -
c  5 laux              I  TRUE=Auxiliary files must be created.
c 15 nbran             I  Number of branches.
c 17 nbrnod            I  Maximum number of connected branches to one
c                         node.
c 13 nexdef            I  Number of entries in exdef table.
c 20 ngrid             I  Number of grid points in network.
c 18 nnode             I  Number of nodes.
c 10 npntr             I  Number of entries in pntr table.
c 11 nposeg            I  Number of positive segment numbers.
c 21 nqlat             P  -
c  6 nsegmt            I  Number of segments defined.
c  8 nsegtb            I  Number of entries in segtab table.
c 12 pntr              P  -
c 26 qaggr             P  -
c 27 qlaggr            P  -
c 22 qltpar            P  -
c 30 segfun            P  -
c  7 segmnt            P  -
c  9 segtab            P  -
c 31 sexar             P  -
c 32 sexfl             P  -
c 33 slen              P  -
c 34 svol              P  -
c 29 tofrom            P  -
c 23 waoft             P  -
c 28 x                 P  -
c-----------------------------------------------------------------------
c Subprogram calls:
c NAME    DESCRIPTION
c wqaux   Water Quality AUXiliary files
c wqexar  Water Quality EXchange AReas
c wqexfl  Water Quality EXchange FLows
c wqfile  Water Quality output FILE generation
c wqfrto  Water Quality FRom and TO lengths
c wqofil  Water Quality Open FILe
c wqrfil  Water Quality Read FILe
c wqslen  Water Quality Segment LENgths
c wqsvol  Water Quality Segment VOLumes
c wqtime  Water Quality TIME conversion
c=======================================================================
c
c
c
c***********************************************************************
c CVS log information:
c
c $Id$
c
c History:
c $Log: wqint.pf,v $
c Revision 1.4  1999/03/12  12:42:23  kuipe_j
c parallel segments added
c
c Revision 1.3  1998/02/13  12:13:04  kuipe_j
c Adapt to CMT
c
c Revision 1.2  1995/05/30  07:08:39  hoeks_a
c file changed from dos to ux
c
c Revision 1.1  1995/04/13  07:11:01  hoeks_a
c Initial check-in
c
c Revision 1.2  1993/11/26  15:35:44  kuipe_j
c Update after finishing Sobeksel.
c
c Revision 1.1.1.1  1993/07/21  14:44:27  kuipe_j
c Initial version
c
c
c***********************************************************************
c
      include '..\include\sobdim.i'
c
c       Parameters
c
      character*120  agrnam
c
      logical        laux
c
      integer        nbran,
     +               nbrnod,
     +               nexdef,
     +               ngrid,
     +               nnode,
     +               npntr,
     +               nposeg,
     +               nqlat,
     +               nsegmt,
     +               nsegtb,
     +               juer,
     +               ker
c
      integer        branch (4,nbran),
     +               brnode (nbrnod+1,nnode),
     +               pntr   (4,npntr),
     +               segmnt (3,nsegmt),
     +               fd_nefis_waq
c
      real           waoft  (ngrid,dmwaof),
     +               afwfqs (ngrid,6),
     +               cp     (ngrid,4),
     +               segtab (5,nsegtb),
     +               exdef  (6,nexdef),
     +               qaggr  (ngrid,3),
     +               qlaggr (*),
     +               qltpar (9,*),
     +               x      (ngrid),
     +               tofrom (2,npntr),
     +               segfun (nposeg,4),
     +               sexar  (npntr),
     +               sexfl  (npntr),
     +               slen   (nposeg),
     +               svol   (nposeg,3)
c
c     Variables
c
      integer   istep,  nots,  dlwqtm(2), tstart(2), time, dt,
     +          i
      real      psi
c
c     Open hydrodynamic database files and read no of time steps stored
c
      call wqofil(agrnam, fd_nefis_waq, nots, psi, juer, ker)
c
c     Do for each time step
c
      do 100 istep = 1, nots
c
c       Read data from time step "istep"
c
        call wqrfil (fd_nefis_waq,
     +                ngrid      ,nqlat      , istep     ,
c                     <Af>        <Afs>      <At>
     +                waoft(1,3) ,afwfqs(1,1),waoft(1,4) ,
c                                            <Wt>        <Wfs>
     +                cp         ,dlwqtm     ,waoft(1,2) ,afwfqs(1,3),
     +                qaggr      ,qlaggr     ,
     +                juer       ,ker
     +               )
c
c       Calculate the length of each segment (Only first time)
c
        if (istep .eq. 1) then
c
c           Calculate length of each segment
c
           call wqslen ( nsegmt ,segmnt ,
     +                    nsegtb ,segtab ,
     +                    ngrid  ,nposeg ,
     +                    x      ,slen
     +                  )
c
c           Calculate the from and to lengths
c
           call wqfrto ( nposeg  ,slen  ,
     +                    npntr  ,pntr  , tofrom ,
     +                    exdef  ,nexdef
     +                  )
c
c           Store current time = starting time
c
            tstart(1) = dlwqtm(1)
            tstart(2) = dlwqtm(2)
            time    = 0
         else
c
c           Calculate current water quality time
c
            call wqtime ( tstart, dlwqtm, dt )
c
c           Save time for new starting point
c
            tstart(1) = dlwqtm(1)
            tstart(2) = dlwqtm(2)

c           copy volumes to 'old' volumes

            do i =1,nposeg
c              <svolo>     <svol>
               svol(i,2) = svol(i,1)
            enddo
c
        endif
c
c       Calculate the segment volumes
c
        call wqsvol ( nsegmt  ,segmnt ,
     +                 nsegtb ,segtab ,
     +                 ngrid  ,nposeg ,psi    ,
c                        <At>       <Afs>
     +                 waoft(1,4),afwfqs(1,1) ,
     +                 x      ,svol(1,1)      )
        if (istep .gt. 1) then

           call wqmbps (ngrid , nqlat , nsegmt, nsegtb, nexdef, nposeg,
     +                  npntr , dt    , exdef , segmnt, segtab, pntr  ,
c                                      <qlatgr>        <qunkno>
     +                  qltpar, qlaggr, waoft(1,18)   , svol(1,3)     ,
c                      <svol>          <svolo>
     +                  svol(1,1)     , svol(1,2)     , x     , sexfl )
c
c          Write data of previous step to output files to be used
c          by Delwaq
c
           call wqfile( laux   ,istep-1,nots   ,
     +                  time   ,npntr  ,nposeg ,tofrom ,
c                                              <svolo>
     +                  segfun ,sexar  ,sexfl  ,svol(1,2) )
c
c          Calculate new time in seconds using delta t
c
           time = time + dt
        endif

c       Calculate the exchange areas
c
        call wqexar ( npntr  ,pntr   ,
     +                 nexdef ,exdef  ,
     +                 ngrid  ,
c                        <Af>       <Afs>
     +                 waoft(1,3),afwfqs(1,1),
     +                 sexar
     +               )
c
c       Calculate the exchange flows
c
        call wqexfl ( npntr  ,pntr   ,nexdef ,exdef  ,
     +                ngrid  ,nbran  ,branch ,nbrnod ,
     +                nnode  ,brnode ,qltpar ,x      ,
     +                qaggr  ,qlaggr ,sexfl  )
c
c        Calculate the auxiliary files
c
        if (laux) then
           call wqaux ( nsegmt ,segmnt ,nsegtb ,segtab ,
     +                   ngrid  ,nposeg ,psi    ,
c                          <Af>             <Afs>
     +                   waoft(1,3)     ,afwfqs(1,1),
     +                   cp     ,qaggr  ,
c                          <Wt>             <Wfs>
     +                   waoft(1,2)     ,afwfqs(1,3),
     +                   x      ,slen   ,
c                          <Chezy>        <Horizontal>
     +                   segfun(1,1)    ,segfun(1,2),
c                          <Velocity>     <Widths>
     +                   segfun(1,3)    ,segfun(1,4)
     +                 )
        endif
c
 100  continue
c
c       Write data of last step to output for Delwaq
c
        call wqfile( laux   ,nots   ,nots   ,
     +               time   ,npntr  ,nposeg ,tofrom ,
c                                           <svol>
     +               segfun ,sexar  ,sexfl  ,svol(1,1))
c
      return
      end
