!----- GPL ---------------------------------------------------------------------
!                                                                               
!  Copyright (C)  Stichting Deltares, 2011-2016.                                
!                                                                               
!  This program is free software: you can redistribute it and/or modify         
!  it under the terms of the GNU General Public License as published by         
!  the Free Software Foundation version 3.                                      
!                                                                               
!  This program is distributed in the hope that it will be useful,              
!  but WITHOUT ANY WARRANTY; without even the implied warranty of               
!  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                
!  GNU General Public License for more details.                                 
!                                                                               
!  You should have received a copy of the GNU General Public License            
!  along with this program.  If not, see <http://www.gnu.org/licenses/>.        
!                                                                               
!  contact: delft3d.support@deltares.nl                                         
!  Stichting Deltares                                                           
!  P.O. Box 177                                                                 
!  2600 MH Delft, The Netherlands                                               
!                                                                               
!  All indications and logos of, and references to, "Delft3D" and "Deltares"    
!  are registered trademarks of Stichting Deltares, and remain the property of  
!  Stichting Deltares. All rights reserved.                                     
!                                                                               
!-------------------------------------------------------------------------------
!  $Id$
!  $HeadURL$$
!-------------------------------------------------------------------------------
integer, parameter :: noRTC              =  0    ! No coupling with rtc module
integer, parameter :: dataFromRTCToFLOW  =  0    ! Coupling bit: RTC sends barrier heights to FLOW
integer, parameter :: dataFromFLOWToRTC  =  1    ! Coupling bit: FLOW sends data to RTC
!   
type sv_rtc
    !
    ! doubles
    !
    ! reals
    !
    ! integers
    !
    integer :: ifirstrtc  
    integer :: stacnt         ! number of stations to be communicated with RTC
    integer :: rtcmod         ! Online Real Time Control together with Flow
                              ! = noRTC              : No coupling with RTC
                              ! = dataFromRTCToFLOW  : Coupling with time to RTC and barrier height to FLOW
                              ! = dataFromFLOWToRTC  : Coupling with time and other parameters from FLOW to RTC
    integer :: rtc_domainnr   ! number of this domain in list of domains participating in RTC communication
    integer :: rtc_ndomains   ! number of domains that participate in RTC communication
    integer :: tnparget       ! total number of parameters to get from RTC module
    integer :: tnlocput       ! total number of parameters to put to RTC module
    integer :: parget_offset  ! offset for parameters of this domain in tparget(_names)
    integer :: parput_offset  ! offset for parameters of this domain in tparput(_names)
    !
    ! pointers
    !
    real(fp)     , dimension(:,:), pointer :: zrtcsta         ! elevation of layer centres at the stations to be communicated to RTC
    real(fp)     , dimension(:)  , pointer :: s1rtcsta        ! water level at the stations to be communicated to RTC
    real(fp)     , dimension(:,:), pointer :: tparget         ! array for all parameters to get from RTC
    real(fp)     , dimension(:,:), pointer :: tparput         ! array for all parameters to put to RTC
    integer      , dimension(:,:), pointer :: mnrtcsta        ! array for m,n indices of stations to be communicated with RTC
    character(20), dimension(:)  , pointer :: namrtcsta       ! array for names of stations to be communicated with RTC
    character(80), dimension(:)  , pointer :: tlocget_names   ! array for names of all parameters to get from RTC
    character(80), dimension(:)  , pointer :: tlocput_names   ! array for names of all locations to put to RTC
    character(80), dimension(:)  , pointer :: tparput_names   ! array for names of all parameters to put to RTC
    ! 
    ! logicals
    !
    logical        :: rtcact  ! Online Real Time Control is active (initialisation has been done)
    logical        :: anyRTCtoFLOW ! Flag to verify whether any domain should receive data from RTC
    logical        :: anyFLOWtoRTC ! Flag to verify whether any domain should send data to RTC
    !
    ! characters
    !
    character(256) :: filrtc  ! File containing points to be communicated with RTC
end type sv_rtc
